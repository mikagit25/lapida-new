import React, { useState, useEffect } from 'react';
import { userService } from '../services/api';
import { useAuth } from '../context/AuthContext';

const PreferencesManager = () => {
  const { user } = useAuth();
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');
  const [preferences, setPreferences] = useState({
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    emailNotifications: true,
    pushNotifications: true,
    smsNotifications: false,
    
    // –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å
    profileVisibility: 'public', // public, friends, private
    showEmail: false,
    showPhone: false,
    allowMessagesFromStrangers: true,
    
    // –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    theme: 'light', // light, dark, auto
    language: 'ru', // ru, en, uk
    timezone: 'Europe/Moscow',
    dateFormat: 'DD.MM.YYYY',
    
    // –ú–µ–º–æ—Ä–∏–∞–ª—ã
    defaultMemorialPrivacy: 'public',
    autoApproveComments: false,
    moderateComments: true,
    allowPhotoComments: true,
    
    // –ö–æ–Ω—Ç–µ–Ω—Ç
    contentLanguageFilter: false,
    hideOffensiveContent: true,
    autoTranslate: false,
    
    // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    socialMediaSharing: true,
    googleMapsIntegration: true,
    calendarIntegration: false
  });

  useEffect(() => {
    loadPreferences();
  }, []);

  const loadPreferences = async () => {
    try {
      setLoading(true);
      const response = await userService.getPreferences();
      if (response.preferences) {
        setPreferences({ ...preferences, ...response.preferences });
      }
    } catch (error) {
      console.error('Error loading preferences:', error);
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    } finally {
      setLoading(false);
    }
  };

  const handlePreferenceChange = (key, value) => {
    setPreferences(prev => ({
      ...prev,
      [key]: value
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError('');
    setSuccess('');

    try {
      await userService.updatePreferences(preferences);
      setSuccess('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    } catch (error) {
      console.error('Error updating preferences:', error);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    } finally {
      setLoading(false);
    }
  };

  const resetToDefaults = () => {
    if (window.confirm('–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é?')) {
      setPreferences({
        emailNotifications: true,
        pushNotifications: true,
        smsNotifications: false,
        profileVisibility: 'public',
        showEmail: false,
        showPhone: false,
        allowMessagesFromStrangers: true,
        theme: 'light',
        language: 'ru',
        timezone: 'Europe/Moscow',
        dateFormat: 'DD.MM.YYYY',
        defaultMemorialPrivacy: 'public',
        autoApproveComments: false,
        moderateComments: true,
        allowPhotoComments: true,
        contentLanguageFilter: false,
        hideOffensiveContent: true,
        autoTranslate: false,
        socialMediaSharing: true,
        googleMapsIntegration: true,
        calendarIntegration: false
      });
    }
  };

  if (loading && !preferences.emailNotifications) {
    return (
      <div className="bg-white shadow rounded-lg">
        <div className="px-6 py-4 border-b border-gray-200">
          <h2 className="text-xl font-semibold text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π</h2>
        </div>
        <div className="px-6 py-12 text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
          <p className="text-gray-600 mt-2">–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-white shadow rounded-lg">
      <div className="px-6 py-4 border-b border-gray-200">
        <div className="flex items-center justify-between">
          <div>
            <h2 className="text-xl font-semibold text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π</h2>
            <p className="text-sm text-gray-600">–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</p>
          </div>
          <button
            onClick={resetToDefaults}
            className="text-gray-500 hover:text-gray-700 text-sm font-medium"
          >
            –°–±—Ä–æ—Å–∏—Ç—å –∫ —É–º–æ–ª—á–∞–Ω–∏—é
          </button>
        </div>
      </div>

      <div className="px-6 py-6">
        {error && (
          <div className="mb-4 bg-red-50 border border-red-200 rounded-lg p-4">
            <p className="text-red-700">{error}</p>
          </div>
        )}

        {success && (
          <div className="mb-4 bg-green-50 border border-green-200 rounded-lg p-4">
            <p className="text-green-700">{success}</p>
          </div>
        )}

        <form onSubmit={handleSubmit} className="space-y-8">
          {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
          <div>
            <h3 className="text-lg font-medium text-gray-900 mb-4">üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
            <div className="space-y-4">
              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.emailNotifications}
                  onChange={(e) => handlePreferenceChange('emailNotifications', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                </span>
              </label>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.pushNotifications}
                  onChange={(e) => handlePreferenceChange('pushNotifications', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
                </span>
              </label>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.smsNotifications}
                  onChange={(e) => handlePreferenceChange('smsNotifications', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã–µ)
                </span>
              </label>
            </div>
          </div>

          {/* –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å */}
          <div>
            <h3 className="text-lg font-medium text-gray-900 mb-4">üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å</h3>
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –í–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è
                </label>
                <select
                  value={preferences.profileVisibility}
                  onChange={(e) => handlePreferenceChange('profileVisibility', e.target.value)}
                  className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="public">–ü—É–±–ª–∏—á–Ω—ã–π - –≤–∏–¥–µ–Ω –≤—Å–µ–º</option>
                  <option value="friends">–î—Ä—É–∑—å—è - —Ç–æ–ª—å–∫–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</option>
                  <option value="private">–ü—Ä–∏–≤–∞—Ç–Ω—ã–π - —Ç–æ–ª—å–∫–æ –º–Ω–µ</option>
                </select>
              </div>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.showEmail}
                  onChange={(e) => handlePreferenceChange('showEmail', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å email –≤ –ø—Ä–æ—Ñ–∏–ª–µ
                </span>
              </label>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.showPhone}
                  onChange={(e) => handlePreferenceChange('showPhone', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –≤ –ø—Ä–æ—Ñ–∏–ª–µ
                </span>
              </label>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.allowMessagesFromStrangers}
                  onChange={(e) => handlePreferenceChange('allowMessagesFromStrangers', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –†–∞–∑—Ä–µ—à–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–µ–∑–Ω–∞–∫–æ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                </span>
              </label>
            </div>
          </div>

          {/* –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å */}
          <div>
            <h3 className="text-lg font-medium text-gray-900 mb-4">üé® –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
                </label>
                <select
                  value={preferences.theme}
                  onChange={(e) => handlePreferenceChange('theme', e.target.value)}
                  className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="light">–°–≤–µ—Ç–ª–∞—è</option>
                  <option value="dark">–¢–µ–º–Ω–∞—è</option>
                  <option value="auto">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
                </label>
                <select
                  value={preferences.language}
                  onChange={(e) => handlePreferenceChange('language', e.target.value)}
                  className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="ru">–†—É—Å—Å–∫–∏–π</option>
                  <option value="en">English</option>
                  <option value="uk">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å
                </label>
                <select
                  value={preferences.timezone}
                  onChange={(e) => handlePreferenceChange('timezone', e.target.value)}
                  className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="Europe/Moscow">–ú–æ—Å–∫–≤–∞ (UTC+3)</option>
                  <option value="Europe/Kiev">–ö–∏–µ–≤ (UTC+2)</option>
                  <option value="Europe/Minsk">–ú–∏–Ω—Å–∫ (UTC+3)</option>
                  <option value="Europe/London">–õ–æ–Ω–¥–æ–Ω (UTC+0)</option>
                  <option value="America/New_York">–ù—å—é-–ô–æ—Ä–∫ (UTC-5)</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
                </label>
                <select
                  value={preferences.dateFormat}
                  onChange={(e) => handlePreferenceChange('dateFormat', e.target.value)}
                  className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="DD.MM.YYYY">31.12.2023</option>
                  <option value="MM/DD/YYYY">12/31/2023</option>
                  <option value="YYYY-MM-DD">2023-12-31</option>
                  <option value="DD MMM YYYY">31 –¥–µ–∫ 2023</option>
                </select>
              </div>
            </div>
          </div>

          {/* –ú–µ–º–æ—Ä–∏–∞–ª—ã */}
          <div>
            <h3 className="text-lg font-medium text-gray-900 mb-4">üèõÔ∏è –ú–µ–º–æ—Ä–∏–∞–ª—ã</h3>
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –Ω–æ–≤—ã—Ö –º–µ–º–æ—Ä–∏–∞–ª–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                </label>
                <select
                  value={preferences.defaultMemorialPrivacy}
                  onChange={(e) => handlePreferenceChange('defaultMemorialPrivacy', e.target.value)}
                  className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="public">–ü—É–±–ª–∏—á–Ω—ã–π</option>
                  <option value="friends">–¢–æ–ª—å–∫–æ –¥–ª—è –¥—Ä—É–∑–µ–π</option>
                  <option value="private">–ü—Ä–∏–≤–∞—Ç–Ω—ã–π</option>
                </select>
              </div>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.autoApproveComments}
                  onChange={(e) => handlePreferenceChange('autoApproveComments', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–¥–æ–±—Ä—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
                </span>
              </label>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.moderateComments}
                  onChange={(e) => handlePreferenceChange('moderateComments', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –í–∫–ª—é—á–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
                </span>
              </label>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.allowPhotoComments}
                  onChange={(e) => handlePreferenceChange('allowPhotoComments', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –†–∞–∑—Ä–µ—à–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º
                </span>
              </label>
            </div>
          </div>

          {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
          <div>
            <h3 className="text-lg font-medium text-gray-900 mb-4">üìù –ö–æ–Ω—Ç–µ–Ω—Ç</h3>
            <div className="space-y-4">
              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.contentLanguageFilter}
                  onChange={(e) => handlePreferenceChange('contentLanguageFilter', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ —è–∑—ã–∫—É
                </span>
              </label>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.hideOffensiveContent}
                  onChange={(e) => handlePreferenceChange('hideOffensiveContent', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –°–∫—Ä—ã–≤–∞—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
                </span>
              </label>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.autoTranslate}
                  onChange={(e) => handlePreferenceChange('autoTranslate', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç
                </span>
              </label>
            </div>
          </div>

          {/* –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ */}
          <div>
            <h3 className="text-lg font-medium text-gray-900 mb-4">üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</h3>
            <div className="space-y-4">
              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.socialMediaSharing}
                  onChange={(e) => handlePreferenceChange('socialMediaSharing', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –†–∞–∑—Ä–µ—à–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö
                </span>
              </label>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.googleMapsIntegration}
                  onChange={(e) => handlePreferenceChange('googleMapsIntegration', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Maps
                </span>
              </label>

              <label className="flex items-center">
                <input
                  type="checkbox"
                  checked={preferences.calendarIntegration}
                  onChange={(e) => handlePreferenceChange('calendarIntegration', e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                />
                <span className="ml-3 text-sm text-gray-700">
                  –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º
                </span>
              </label>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div className="pt-6 border-t border-gray-200">
            <div className="flex justify-end space-x-3">
              <button
                type="button"
                onClick={resetToDefaults}
                className="bg-gray-300 text-gray-700 px-6 py-2 rounded-md hover:bg-gray-400 transition-colors"
              >
                –°–±—Ä–æ—Å–∏—Ç—å
              </button>
              <button
                type="submit"
                disabled={loading}
                className="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
              >
                {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  );
};

export default PreferencesManager;