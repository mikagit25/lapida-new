import React, { useState, useEffect } from 'react';
import { userService } from '../services/api';
import { useAuth } from '../context/AuthContext';

const ActivityHistory = () => {
  const { user } = useAuth();
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [activities, setActivities] = useState([]);
  const [filters, setFilters] = useState({
    type: 'all',
    dateRange: '30',
    page: 1,
    limit: 20
  });
  const [totalPages, setTotalPages] = useState(1);

  useEffect(() => {
    loadActivities();
  }, [filters]);

  const loadActivities = async () => {
    setLoading(true);
    setError('');

    try {
      const response = await userService.getActivityHistory(filters);
      setActivities(response?.activities || []);
      setTotalPages(response?.totalPages || 1);
    } catch (error) {
      console.error('Error loading activities:', error);
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
    } finally {
      setLoading(false);
    }
  };

  const getActivityIcon = (type) => {
    const icons = {
      memorial_created: 'üèõÔ∏è',
      memorial_updated: '‚úèÔ∏è',
      memorial_deleted: 'üóëÔ∏è',
      comment_posted: 'üí¨',
      comment_deleted: 'üóëÔ∏è',
      friend_added: 'üë•',
      friend_removed: 'üë•',
      message_sent: 'üìß',
      profile_updated: 'üë§',
      settings_changed: '‚öôÔ∏è',
      login: 'üîë',
      logout: 'üö™',
      password_changed: 'üîí',
      avatar_uploaded: 'üì∏',
      file_uploaded: 'üìé',
      tribute_added: 'üíê'
    };
    return icons[type] || 'üìã';
  };

  const getActivityTitle = (activity) => {
    const titles = {
      memorial_created: '–°–æ–∑–¥–∞–Ω –º–µ–º–æ—Ä–∏–∞–ª',
      memorial_updated: '–û–±–Ω–æ–≤–ª–µ–Ω –º–µ–º–æ—Ä–∏–∞–ª',
      memorial_deleted: '–£–¥–∞–ª–µ–Ω –º–µ–º–æ—Ä–∏–∞–ª',
      comment_posted: '–î–æ–±–∞–≤–ª–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
      comment_deleted: '–£–¥–∞–ª–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
      friend_added: '–î–æ–±–∞–≤–ª–µ–Ω –¥—Ä—É–≥',
      friend_removed: '–£–¥–∞–ª–µ–Ω –∏–∑ –¥—Ä—É–∑–µ–π',
      message_sent: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ',
      profile_updated: '–û–±–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å',
      settings_changed: '–ò–∑–º–µ–Ω–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
      login: '–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É',
      logout: '–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã',
      password_changed: '–ò–∑–º–µ–Ω–µ–Ω –ø–∞—Ä–æ–ª—å',
      avatar_uploaded: '–û–±–Ω–æ–≤–ª–µ–Ω –∞–≤–∞—Ç–∞—Ä',
      file_uploaded: '–ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª',
      tribute_added: '–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ—Å–ª–∞–Ω–∏–µ'
    };
    return titles[activity.type] || '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å';
  };

  const getActivityDescription = (activity) => {
    if (activity.description) return activity.description;
    
    switch (activity.type) {
      case 'memorial_created':
        return `–°–æ–∑–¥–∞–Ω –º–µ–º–æ—Ä–∏–∞–ª "${activity.metadata?.memorialName || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}"`;
      case 'memorial_updated':
        return `–û–±–Ω–æ–≤–ª–µ–Ω –º–µ–º–æ—Ä–∏–∞–ª "${activity.metadata?.memorialName || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}"`;
      case 'comment_posted':
        return `–î–æ–±–∞–≤–ª–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –º–µ–º–æ—Ä–∏–∞–ª—É "${activity.metadata?.memorialName || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}"`;
      case 'friend_added':
        return `–î–æ–±–∞–≤–ª–µ–Ω –≤ –¥—Ä—É–∑—å—è: ${activity.metadata?.friendName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}`;
      case 'message_sent':
        return `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${activity.metadata?.recipientName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`;
      case 'login':
        return `–í—Ö–æ–¥ —Å IP: ${activity.metadata?.ip || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`;
      default:
        return '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
    }
  };

  const formatDate = (dateString) => {
    const date = new Date(dateString);
    const now = new Date();
    const diffTime = Math.abs(now - date);
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

    if (diffDays === 1) return '–í—á–µ—Ä–∞';
    if (diffDays < 7) return `${diffDays} –¥–Ω–µ–π –Ω–∞–∑–∞–¥`;
    if (diffDays < 30) return `${Math.ceil(diffDays / 7)} –Ω–µ–¥–µ–ª—å –Ω–∞–∑–∞–¥`;
    
    return date.toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const handleFilterChange = (key, value) => {
    setFilters(prev => ({
      ...prev,
      [key]: value,
      page: 1 // –°–±—Ä–æ—Å –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    }));
  };

  const handlePageChange = (newPage) => {
    setFilters(prev => ({ ...prev, page: newPage }));
  };

  const clearHistory = async () => {
    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏?')) {
      return;
    }

    setLoading(true);
    try {
      await userService.clearActivityHistory();
      setActivities([]);
      setError('');
    } catch (error) {
      console.error('Error clearing history:', error);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∏—Å—Ç–æ—Ä–∏–∏');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="bg-white shadow rounded-lg">
      <div className="px-6 py-4 border-b border-gray-200">
        <div className="flex items-center justify-between">
          <div>
            <h2 className="text-xl font-semibold text-gray-900">–ò—Å—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h2>
            <p className="text-sm text-gray-600">–í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ —Å–∞–π—Ç–µ</p>
          </div>
          <button
            onClick={clearHistory}
            className="text-red-600 hover:text-red-800 text-sm font-medium"
          >
            –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é
          </button>
        </div>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã */}
      <div className="px-6 py-4 border-b border-gray-200">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –¢–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            </label>
            <select
              value={filters.type}
              onChange={(e) => handleFilterChange('type', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="all">–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è</option>
              <option value="memorial">–ú–µ–º–æ—Ä–∏–∞–ª—ã</option>
              <option value="comment">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</option>
              <option value="social">–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ</option>
              <option value="profile">–ü—Ä–æ—Ñ–∏–ª—å</option>
              <option value="security">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</option>
            </select>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ü–µ—Ä–∏–æ–¥
            </label>
            <select
              value={filters.dateRange}
              onChange={(e) => handleFilterChange('dateRange', e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="7">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π</option>
              <option value="30">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π</option>
              <option value="90">–ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞</option>
              <option value="365">–ü–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥</option>
              <option value="all">–í—Å–µ –≤—Ä–µ–º—è</option>
            </select>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ü–æ–∫–∞–∑–∞—Ç—å
            </label>
            <select
              value={filters.limit}
              onChange={(e) => handleFilterChange('limit', parseInt(e.target.value))}
              className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="10">10 –∑–∞–ø–∏—Å–µ–π</option>
              <option value="20">20 –∑–∞–ø–∏—Å–µ–π</option>
              <option value="50">50 –∑–∞–ø–∏—Å–µ–π</option>
            </select>
          </div>
        </div>
      </div>

      <div className="px-6 py-6">
        {error && (
          <div className="mb-4 bg-red-50 border border-red-200 rounded-lg p-4">
            <p className="text-red-700">{error}</p>
          </div>
        )}

        {loading ? (
          <div className="text-center py-8">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
            <p className="text-gray-600 mt-2">–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏...</p>
          </div>
        ) : activities.length === 0 ? (
          <div className="text-center py-8">
            <div className="text-gray-400 text-4xl mb-4">üìã</div>
            <p className="text-gray-500">–ò—Å—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—É—Å—Ç–∞</p>
            <p className="text-gray-400 text-sm mt-2">
              –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ —Å–∞–π—Ç–µ
            </p>
          </div>
        ) : (
          <div className="space-y-4">
            {activities.map((activity, index) => (
              <div
                key={activity.id || index}
                className="flex items-start space-x-4 p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors"
              >
                <div className="flex-shrink-0">
                  <span className="text-2xl" role="img" aria-label="activity">
                    {getActivityIcon(activity.type)}
                  </span>
                </div>

                <div className="flex-1 min-w-0">
                  <div className="flex items-start justify-between">
                    <div>
                      <h3 className="text-sm font-medium text-gray-900">
                        {getActivityTitle(activity)}
                      </h3>
                      <p className="text-sm text-gray-600 mt-1">
                        {getActivityDescription(activity)}
                      </p>
                      
                      {activity.metadata?.details && (
                        <div className="mt-2">
                          <details className="text-xs text-gray-500">
                            <summary className="cursor-pointer hover:text-gray-700">
                              –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏
                            </summary>
                            <pre className="mt-1 whitespace-pre-wrap">
                              {JSON.stringify(activity.metadata.details, null, 2)}
                            </pre>
                          </details>
                        </div>
                      )}
                    </div>

                    <div className="flex-shrink-0 text-right">
                      <p className="text-xs text-gray-500">
                        {formatDate(activity.createdAt)}
                      </p>
                      {activity.metadata?.ip && (
                        <p className="text-xs text-gray-400 mt-1">
                          IP: {activity.metadata.ip}
                        </p>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            ))}

            {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
            {totalPages > 1 && (
              <div className="flex items-center justify-between border-t border-gray-200 pt-4">
                <div className="text-sm text-gray-700">
                  –°—Ç—Ä–∞–Ω–∏—Ü–∞ {filters.page} –∏–∑ {totalPages}
                </div>
                <div className="flex space-x-2">
                  <button
                    onClick={() => handlePageChange(filters.page - 1)}
                    disabled={filters.page === 1}
                    className="px-3 py-1 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    –ù–∞–∑–∞–¥
                  </button>
                  <button
                    onClick={() => handlePageChange(filters.page + 1)}
                    disabled={filters.page === totalPages}
                    className="px-3 py-1 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    –í–ø–µ—Ä–µ–¥
                  </button>
                </div>
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default ActivityHistory;