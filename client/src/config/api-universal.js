/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL API –≤ –ª—é–±—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö
 */

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ URL API
function getApiBaseUrl() {
    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞: –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞ 3000, API –Ω–∞ 5002, –∏–Ω–∞—á–µ /api –Ω–∞ —Ç–µ–∫—É—â–µ–º origin
    // –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º origin + '/api', –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –ø–æ—Ä—Ç–∞ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const origin = window.location.origin;
    const apiUrl = origin + '/api';
    console.log('üåç –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π API URL:', apiUrl);
    return apiUrl;
}

// –û—Å–Ω–æ–≤–Ω–æ–π API URL
export const API_BASE_URL = getApiBaseUrl();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–æ—Ä—Ç–æ–≤
export async function findWorkingApiUrl() {
    // –ö—ç—à–∏—Ä—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ä–∞–±–æ—á–∏–π API URL
    if (window.__cachedWorkingApiUrl) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–æ –ª–∏ –æ—à–∏–±–∫–∏ 500 –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∑–∞–ø—Ä–æ—Å–µ
        try {
            const testUrl = window.__cachedWorkingApiUrl.replace(/\/api$/, '');
            const response = await fetch(`${testUrl}/api/health`, { method: 'GET', timeout: 2000 });
            if (response.ok) {
                return window.__cachedWorkingApiUrl;
            } else if (response.status === 500) {
                // –û—à–∏–±–∫–∞ 500 ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—ç—à
                window.__cachedWorkingApiUrl = null;
            }
        } catch (e) {
            window.__cachedWorkingApiUrl = null;
        }
    }

    const currentHost = window.location.hostname;
    const currentProtocol = window.location.protocol;
    // –ü—Ä–æ–±—É–µ–º 5005 –ø–µ—Ä–≤—ã–º, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã –ø–æ—Å–ª–µ
    const portsToTry = [5005, 5184, 3000, 5007, 8000, 5000, 4000, 8080, 9000];
    console.log('üîç –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ API —Å–µ—Ä–≤–µ—Ä–∞...');
    for (const port of portsToTry) {
        const testUrl = `${currentProtocol}//${currentHost}:${port}`;
        try {
            const response = await fetch(`${testUrl}/api/health`, {
                method: 'GET',
                timeout: 2000
            });
            if (response.ok) {
                const json = await response.json();
                if (json && json.app === 'lapida') {
                    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω —Ä–∞–±–æ—Ç–∞—é—â–∏–π API —Å–µ—Ä–≤–µ—Ä: ${testUrl}/api`);
                    window.__cachedWorkingApiUrl = `${testUrl}/api`;
                    return `${testUrl}/api`;
                } else {
                    console.log(`‚ö†Ô∏è –ü–æ—Ä—Ç ${port} –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –Ω–µ lapida:`, json);
                }
            }
        } catch (error) {
            console.log(`‚ùå –ü–æ—Ä—Ç ${port} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`);
        }
    }
    console.log('‚ö†Ô∏è –†–∞–±–æ—Ç–∞—é—â–∏–π API —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π URL');
    window.__cachedWorkingApiUrl = API_BASE_URL;
    return API_BASE_URL;
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export default API_BASE_URL;

// –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
console.log('üéØ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
console.log('üìç –ë–∞–∑–æ–≤—ã–π API URL:', API_BASE_URL);
console.log('üåç –û–∫—Ä—É–∂–µ–Ω–∏–µ:', import.meta.env.MODE);
