#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Lapida –Ω–∞ VPS/VDS
# –°–∫—Ä–∏–ø—Ç –¥–ª—è Hoster.by —Å SSH –¥–æ—Å—Ç—É–ø–æ–º

echo "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Lapida –Ω–∞ VPS..."
echo "=================================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥
check_command() {
    if command -v "$1" >/dev/null 2>&1; then
        echo "‚úÖ $1 –Ω–∞–π–¥–µ–Ω"
        return 0
    else
        echo "‚ùå $1 –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js —á–µ—Ä–µ–∑ NodeSource
install_nodejs() {
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É
    if [ -f /etc/debian_version ]; then
        # Debian/Ubuntu
        curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        sudo apt-get install -y nodejs
    elif [ -f /etc/redhat-release ]; then
        # CentOS/RHEL
        curl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -
        sudo yum install -y nodejs
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∏—Å—Ç–µ–º—É. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –≤—Ä—É—á–Ω—É—é"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js
if ! check_command node; then
    echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js..."
    install_nodejs
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º npm
if ! check_command npm; then
    echo "‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js"
    exit 1
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Ä—Å–∏–∏
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:"
echo "Node.js: $(node --version)"
echo "npm: $(npm --version)"
echo "–°–∏—Å—Ç–µ–º–∞: $(uname -a)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º MongoDB
if ! check_command mongod; then
    echo "‚ö†Ô∏è MongoDB –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    if [ -f /etc/debian_version ]; then
        # Debian/Ubuntu
        wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
        sudo apt-get update
        sudo apt-get install -y mongodb-org
        sudo systemctl start mongod
        sudo systemctl enable mongod
    else
        echo "‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MongoDB –≤—Ä—É—á–Ω—É—é –¥–ª—è –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã"
    fi
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")"
PROJECT_DIR=$(pwd)
echo "üìÅ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: $PROJECT_DIR"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
REQUIRED_FILES=("app.js" "package.json")
for file in "${REQUIRED_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file –Ω–∞–π–¥–µ–Ω"
    else
        echo "‚ùå $file –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
done

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pkill -f "node.*app.js" || true

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π npm..."
npm install

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
if [ $? -eq 0 ]; then
    echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    echo "–ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±..."
    rm -rf node_modules package-lock.json
    npm cache clean --force
    npm install --no-optional --production
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ JWT —Å–µ–∫—Ä–µ—Ç–∞
echo "üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT —Å–µ–∫—Ä–µ—Ç–∞..."
JWT_SECRET=$(openssl rand -hex 32)

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cat > .env << EOF
NODE_ENV=production
PORT=3000
MONGODB_URI=mongodb://localhost:27017/lapida_db
JWT_SECRET=$JWT_SECRET
EOF

echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫..."
mkdir -p upload/{memorials,gallery,users,timeline,misc}
chmod 755 upload
chmod 755 upload/*

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2 –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏
echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..."
if ! check_command pm2; then
    npm install -g pm2
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PM2
cat > ecosystem.config.js << EOF
module.exports = {
  apps: [{
    name: 'lapida',
    script: './app.js',
    instances: 1,
    exec_mode: 'fork',
    env: {
      NODE_ENV: 'production',
      PORT: 3000
    },
    error_file: './logs/err.log',
    out_file: './logs/out.log',
    log_file: './logs/combined.log',
    time: true
  }]
};
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p logs

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üöÄ –ó–∞–ø—É—Å–∫ Lapida..."
pm2 start ecosystem.config.js
pm2 save
pm2 startup

# –°–æ–∑–¥–∞–Ω–∏–µ .htaccess –¥–ª—è –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
cat > .htaccess << 'EOF'
RewriteEngine On

# API –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Node.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
RewriteCond %{REQUEST_URI} ^/api/ [NC]
RewriteRule ^api/(.*)$ http://localhost:3000/api/$1 [P,L]

# Upload –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ
RewriteCond %{REQUEST_URI} ^/upload/ [NC]
RewriteRule ^upload/(.*)$ http://localhost:3000/upload/$1 [P,L]

# React Router –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ /index.html [L]
EOF

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
sleep 3
pm2 status

# –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
if curl -s http://localhost:3000 >/dev/null; then
    echo "‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 3000"
else
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    pm2 logs lapida --lines 10
fi

echo ""
echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "=================================================="
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: lapida"
echo "‚Ä¢ –ü–æ—Ä—Ç: 3000"
echo "‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: ecosystem.config.js"
echo "‚Ä¢ –õ–æ–≥–∏: ./logs/"
echo "‚Ä¢ JWT —Å–µ–∫—Ä–µ—Ç: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo ""
echo "üîß –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "‚Ä¢ pm2 status          - —Å—Ç–∞—Ç—É—Å"
echo "‚Ä¢ pm2 logs lapida     - –ª–æ–≥–∏"
echo "‚Ä¢ pm2 restart lapida  - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "‚Ä¢ pm2 stop lapida     - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞"
echo ""
echo "üåê –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–æ–º–µ–Ω –Ω–∞ –ø–æ—Ä—Ç 3000 –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ"
