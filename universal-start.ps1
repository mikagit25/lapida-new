param(
    [int]$PreferredServerPort = 3000,
    [int]$PreferredClientPort = 3001,
    [string]$Environment = "development",
    [switch]$AutoDetect = $true,
    [switch]$Force = $false
)

Write-Host "üöÄ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ Lapida" -ForegroundColor Green
Write-Host "=" * 50 -ForegroundColor Gray

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
function Test-Port {
    param([int]$Port)
    try {
        $tcpListener = New-Object System.Net.Sockets.TcpListener([System.Net.IPAddress]::Any, $Port)
        $tcpListener.Start()
        $tcpListener.Stop()
        return $true
    }
    catch {
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞
function Find-FreePort {
    param([int]$StartPort)
    $port = $StartPort
    while (-not (Test-Port $port)) {
        $port++
        if ($port -gt 65535) {
            throw "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç"
        }
    }
    return $port
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
function Detect-Environment {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Ö–æ—Å—Ç–∏–Ω–≥–∞
    if (Test-Path "vercel.json") { return "vercel" }
    if (Test-Path "netlify.toml") { return "netlify" }
    if (Test-Path "Procfile") { return "heroku" }
    if (Test-Path "docker-compose.yml") { return "docker" }
    if ($env:NODE_ENV -eq "production") { return "production" }
    return "development"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
function Stop-ExistingProcesses {
    param([switch]$Force)
    
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..." -ForegroundColor Yellow
    
    $nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue
    if ($nodeProcesses) {
        Write-Host "–ù–∞–π–¥–µ–Ω–æ $($nodeProcesses.Count) Node.js –ø—Ä–æ—Ü–µ—Å—Å–æ–≤" -ForegroundColor Yellow
        if ($Force) {
            Write-Host "üõë –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö Node.js –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..." -ForegroundColor Red
            $nodeProcesses | ForEach-Object { Stop-Process -Id $_.Id -Force -ErrorAction SilentlyContinue }
            Start-Sleep -Seconds 2
        } else {
            Write-Host "‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä -Force –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤" -ForegroundColor Yellow
        }
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
function Create-ConfigFiles {
    param(
        [string]$ServerPort,
        [string]$ClientPort,
        [string]$Environment
    )
    
    Write-Host "üìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Blue
    
    # –°–æ–∑–¥–∞–µ–º .env –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
    $serverEnvContent = @"
NODE_ENV=$Environment
PORT=$ServerPort
MONGODB_URI=mongodb://localhost:27017/lapida_db
JWT_SECRET=your_jwt_secret_key_here
"@
    
    Set-Content -Path "server\.env" -Value $serverEnvContent -Encoding UTF8
    Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω server\.env" -ForegroundColor Green
    
    # –°–æ–∑–¥–∞–µ–º .env.local –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    $clientEnvContent = @"
VITE_API_URL=http://localhost:$ServerPort
VITE_APP_ENV=$Environment
"@
    
    Set-Content -Path "client\.env.local" -Value $clientEnvContent -Encoding UTF8
    Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω client\.env.local" -ForegroundColor Green
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function Check-Dependencies {
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Blue
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js
    try {
        $nodeVersion = node --version
        Write-Host "‚úÖ Node.js: $nodeVersion" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
        return $false
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º npm
    try {
        $npmVersion = npm --version
        Write-Host "‚úÖ npm: $npmVersion" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
        return $false
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º node_modules –≤ —Å–µ—Ä–≤–µ—Ä–µ
    if (-not (Test-Path "server\node_modules")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å–µ—Ä–≤–µ—Ä–∞..." -ForegroundColor Yellow
        Set-Location "server"
        npm install
        Set-Location ".."
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º node_modules –≤ –∫–ª–∏–µ–Ω—Ç–µ
    if (-not (Test-Path "client\node_modules")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∫–ª–∏–µ–Ω—Ç–∞..." -ForegroundColor Yellow
        Set-Location "client"
        npm install
        Set-Location ".."
    }
    
    return $true
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
try {
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    $DetectedEnvironment = Detect-Environment
    Write-Host "üåç –û–∫—Ä—É–∂–µ–Ω–∏–µ: $DetectedEnvironment" -ForegroundColor Cyan
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    Stop-ExistingProcesses -Force:$Force
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if (-not (Check-Dependencies)) {
        throw "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞"
    }
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—Ç—ã
    if ($AutoDetect) {
        Write-Host "üîç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤..." -ForegroundColor Yellow
        $ServerPort = Find-FreePort $PreferredServerPort
        $ClientPort = Find-FreePort $PreferredClientPort
        
        # –ï—Å–ª–∏ –ø–æ—Ä—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç, –Ω–∞–π–¥–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Å–≤–æ–±–æ–¥–Ω—ã–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
        if ($ClientPort -eq $ServerPort) {
            $ClientPort = Find-FreePort ($ServerPort + 1)
        }
    } else {
        $ServerPort = $PreferredServerPort
        $ClientPort = $PreferredClientPort
    }
    
    Write-Host "üîß –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É: $ServerPort" -ForegroundColor Green
    Write-Host "üé® –ö–ª–∏–µ–Ω—Ç –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É: $ClientPort" -ForegroundColor Green
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    Create-ConfigFiles -ServerPort $ServerPort -ClientPort $ClientPort -Environment $DetectedEnvironment
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    Write-Host "üîß –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞..." -ForegroundColor Blue
    $serverProcess = Start-Process powershell -ArgumentList @(
        "-NoExit",
        "-Command",
        "cd '$PWD\server'; `$env:PORT='$ServerPort'; node app.js"
    ) -WindowStyle Normal -PassThru
    
    Write-Host "‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $($serverProcess.Id))" -ForegroundColor Green
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..." -ForegroundColor Yellow
    Start-Sleep -Seconds 5
    
    # –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞
    Write-Host "üé® –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞..." -ForegroundColor Blue
    $clientProcess = Start-Process powershell -ArgumentList @(
        "-NoExit", 
        "-Command",
        "cd '$PWD\client'; npm run dev -- --port $ClientPort"
    ) -WindowStyle Normal -PassThru
    
    Write-Host "‚úÖ –ö–ª–∏–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω (PID: $($clientProcess.Id))" -ForegroundColor Green
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    Write-Host ""
    Write-Host "üéâ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!" -ForegroundColor Green
    Write-Host "=" * 50 -ForegroundColor Gray
    Write-Host "üì± Frontend: http://localhost:$ClientPort" -ForegroundColor Cyan
    Write-Host "üîó Backend:  http://localhost:$ServerPort" -ForegroundColor Cyan  
    Write-Host "üè• Health:   http://localhost:$ServerPort/api/health" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö:" -ForegroundColor Yellow
    Write-Host "   –°–µ—Ä–≤–µ—Ä PID: $($serverProcess.Id)" -ForegroundColor Gray
    Write-Host "   –ö–ª–∏–µ–Ω—Ç PID: $($clientProcess.Id)" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:" -ForegroundColor Yellow
    Write-Host "   taskkill /f /pid $($serverProcess.Id)" -ForegroundColor Gray
    Write-Host "   taskkill /f /pid $($clientProcess.Id)" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üí° –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞:" -ForegroundColor Yellow
    Write-Host "   .\universal-start.ps1 -PreferredServerPort 4000 -PreferredClientPort 4001" -ForegroundColor Gray
    Write-Host "   .\universal-start.ps1 -Force  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤" -ForegroundColor Gray
    
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}
